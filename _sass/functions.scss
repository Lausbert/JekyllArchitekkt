// Global Functions

// Responsive Layout

@mixin larger-desktop {
  @media (min-width: #{$large-desktop-device}) and (max-width: #{$larger-desktop-device}) {
    @content;
  }
}

@mixin large-desktop {
  @media (min-width: #{$desktop-device}) and (max-width: #{$large-desktop-device}) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: #{$laptop-device}) and (max-width: #{$desktop-device}) {
    @content;
  }
}

@mixin laptop {
  @media (min-width: #{$tablet-device}) and (max-width: #{$laptop-device}) {
    @content;
  }
}

@mixin tablet {
  @media (min-width: #{$mobile-device}) and (max-width: #{$tablet-device}) {
    @content;
  }
}

@mixin mobile {
  @media (max-width: #{$mobile-device}) {
    @content;
  }
}

// Section Spacing

@each $space in $sectionspace {
  @each $sides2 in $sides2 {
    .p-#{str-slice($sides2, 0, 1)}-#{$space} {
      padding-#{$sides2}: #{$space}px;
    }

  }
}

@include larger-desktop {
  @each $space in $sectionspace {
    @each $sides2 in $sides2 {
      .p-#{str-slice($sides2, 0, 1)}-#{$space} {
        padding-#{$sides2}: #{$space * 0.9}px;
      }

    }
  }
}

@include large-desktop {
  @each $space in $sectionspace {
    @each $sides2 in $sides2 {
      .p-#{str-slice($sides2, 0, 1)}-#{$space} {
        padding-#{$sides2}: #{$space * 0.8}px;
      }

    }
  }
}

@include desktop {
  @each $space in $sectionspace {
    @each $sides2 in $sides2 {
      .p-#{str-slice($sides2, 0, 1)}-#{$space} {
        padding-#{$sides2}: #{$space * 0.6}px;
      }

    }
  }
}

@include laptop {
  @each $space in $sectionspace {
    @each $sides2 in $sides2 {
      .p-#{str-slice($sides2, 0, 1)}-#{$space} {
        padding-#{$sides2}: #{$space * 0.5}px;
      }

    }
  }
}

@include tablet {
  @each $space in $sectionspace {
    @each $sides2 in $sides2 {
      .p-#{str-slice($sides2, 0, 1)}-#{$space} {
        padding-#{$sides2}: #{$space * 0.4}px;
      }

    }
  }
}

@include mobile {
  @each $space in $sectionspace {
    @each $sides2 in $sides2 {
      .p-#{str-slice($sides2, 0, 1)}-#{$space} {
        padding-#{$sides2}: #{$space * 0.3}px;
      }

    }
  }
}

// Inner Spacing

@each $space in $innerspace {
  @each $side in $sides {
    .m-#{str-slice($side, 0, 1)}-#{$space} {
      margin-#{$side}: #{$space}px;
    }

  }
}

@include tablet {
  @each $space in $innerspace {
    @if $space>20 {
      @each $side in $sides {
        .m-#{str-slice($side, 0, 1)}-#{$space} {
          margin-#{$side}: #{$space - 20}px;
        }
      }
    }
  }
}

@include mobile {
  @each $space in $innerspace {
    @if $space>20 {
      @each $side in $sides {
        .m-#{str-slice($side, 0, 1)}-#{$space} {
          margin-#{$side}: #{$space - 20}px;
        }
      }
    }
  }
}

// Font Size
@mixin font-size($font-size-base) {
  font-size: ($font-size-base * 10) + px;
}

@mixin placeholder {
  ::-webkit-input-placeholder {
    @content
  }

  :-moz-placeholder {
    @content
  }

  ::-moz-placeholder {
    @content
  }

  :-ms-input-placeholder {
    @content
  }
}

//  Color Opacity

@mixin background-opacity($color, $background) {
  $percent: alpha($color) * 100%;
  $opaque: opacify($color, 1);
  $solid-color: mix($opaque, $background, $percent);
  background-color: $solid-color;
  background-color: $color;
}

@mixin color-opacity($color, $background) {
  $percent: alpha($color) * 100%;
  $opaque: opacify($color, 1);
  $solid-color: mix($opaque, $background, $percent);
  color: $solid-color;
  color: $color;
}



// Form Handle
@mixin form-size($font-size, $space-vertical, $space-horizontal, $border-radius) {
  font-size: $font-size;
  padding: $space-vertical $space-horizontal;
  border-radius: $border-radius;
}

@mixin form-variant($color, $background, $border, $change-color, $change-background, $change-border) {
  color: $color;
  background-color: $background;
  border: $border;

  &:focus,
  &:hover,
  &:active {
    color: $change-color;
    background-color: $change-background;
    border: $change-border;
  }
}